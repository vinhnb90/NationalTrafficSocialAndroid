<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">

    <declare-styleable name="LoadingIndicatorView">
        <attr name="minWidth" format="dimension" />
        <attr name="maxWidth" format="dimension"/>
        <attr name="minHeight" format="dimension" />
        <attr name="maxHeight" format="dimension"/>
        <attr name="indicatorName" format="string"/>
        <attr name="indicatorColor" format="color"/>
    </declare-styleable>

    <declare-styleable name="MaterialSpinner" tools:ignore="ResourceName">
        <attr name="spinner_dropdown_max_height" format="dimension" />
        <attr name="spinner_dropdown_height" format="dimension">
            <enum name="match_parent" value="-1" />
            <enum name="wrap_content" value="-2" />
        </attr>
    </declare-styleable>

    <attr name="tabLayoutGravity" format="enum">
        <enum name="top" value="1" />
        <enum name="bottom" value="2" />
    </attr>

    <attr name="tabLayoutBackground" format="color" />
    <attr name="tabLayoutIndicatorColor" format="color" />
    <attr name="tabLayoutSelectedTextColor" format="color" />
    <attr name="tabLayoutTextColor" format="color" />

    <attr name="scrollFlag">
        <flag name="scroll" value="0x1" />
        <flag name="exitUntilCollapsed" value="0x2" />
        <flag name="enterAlways" value="0x4" />
        <flag name="enterAlwaysCollapsed" value="0x8" />
        <flag name="snap" value="0x10" />
    </attr>

    <attr name="tabLayoutIndicatorHeight" format="dimension" />

    <attr name="progressBarTextSize" format="dimension" />
    <!-- tab design Layout -->
    <declare-styleable name="tab_design">
        <attr name="tabLayoutGravity" />
        <attr name="tabLayoutBackground" />
        <attr name="tabLayoutIndicatorColor" />
        <attr name="tabLayoutSelectedTextColor" />
        <attr name="tabLayoutTextColor" />
    </declare-styleable>

    <!-- tab coordinator Layout -->
    <declare-styleable name="tab_coordinator">
        <attr name="tabLayoutGravity" />
        <attr name="tabLayoutBackground" />
        <attr name="tabLayoutIndicatorColor" />
        <attr name="tabLayoutSelectedTextColor" />
        <attr name="tabLayoutTextColor" />
        <attr name="scrollFlag" />
        <attr name="tabLayoutIndicatorHeight" />
    </declare-styleable>

    <declare-styleable name="BottomNavigationBehavior_Params">
        <attr name="tabLayoutId" format="reference" />
        <attr name="selectedBackgroundVisible" format="boolean" />
        <attr name="translucentNavigationEnabled" format="boolean" />
    </declare-styleable>

    <declare-styleable name="SlidingUpPanelLayout">
        <attr name="umanoPanelHeight" format="dimension" />
        <attr name="umanoShadowHeight" format="dimension" />
        <attr name="umanoParallaxOffset" format="dimension" />
        <attr name="umanoFadeColor" format="color" />
        <attr name="umanoFlingVelocity" format="integer" />
        <attr name="umanoDragView" format="reference" />
        <attr name="umanoScrollableView" format="reference" />
        <attr name="umanoOverlay" format="boolean" />
        <attr name="umanoClipPanel" format="boolean" />
        <attr name="umanoAnchorPoint" format="float" />
        <attr name="umanoInitialState" format="enum">
            <enum name="expanded" value="0" />
            <enum name="collapsed" value="1" />
            <enum name="anchored" value="2" />
            <enum name="hidden" value="3" />
        </attr>
        <attr name="umanoScrollInterpolator" format="reference" />
    </declare-styleable>

    <!--=============== FlexboxLayout ====================-->
    <declare-styleable name="FlexboxLayout">
        <attr name="flexDirection">
            <enum name="row" value="0" />
            <enum name="row_reverse" value="1" />
            <enum name="column" value="2" />
            <enum name="column_reverse" value="3" />
        </attr>

        <attr name="flexWrap">
            <enum name="nowrap" value="0" />
            <enum name="wrap" value="1" />
            <enum name="wrap_reverse" value="2" />
        </attr>

        <!--
            Omitting flex-flow property since it's reflected in the parent flex container.
            Set the flexDirection and/or flexWrap to the parent flex container explicitly if you
            want to use the flex-flow similar way to the web.
         -->

        <attr name="justifyContent">
            <enum name="flex_start" value="0" />
            <enum name="flex_end" value="1" />
            <enum name="center" value="2" />
            <enum name="space_between" value="3" />
            <enum name="space_around" value="4" />
        </attr>

        <attr name="alignItems">
            <enum name="flex_start" value="0" />
            <enum name="flex_end" value="1" />
            <enum name="center" value="2" />
            <enum name="baseline" value="3" />
            <enum name="stretch" value="4" />
        </attr>

        <attr name="alignContent">
            <enum name="flex_start" value="0" />
            <enum name="flex_end" value="1" />
            <enum name="center" value="2" />
            <enum name="space_between" value="3" />
            <enum name="space_around" value="4" />
            <enum name="stretch" value="5" />
        </attr>

        <attr name="dividerDrawable" format="reference" />
        <attr name="dividerDrawableHorizontal" format="reference" />
        <attr name="dividerDrawableVertical" format="reference" />

        <attr name="showDivider">
            <flag name="none" value="0" />
            <flag name="beginning" value="1" />
            <flag name="middle" value="2" />
            <flag name="end" value="4" />
        </attr>
        <attr name="showDividerHorizontal">
            <flag name="none" value="0" />
            <flag name="beginning" value="1" />
            <flag name="middle" value="2" />
            <flag name="end" value="4" />
        </attr>
        <attr name="showDividerVertical">
            <flag name="none" value="0" />
            <flag name="beginning" value="1" />
            <flag name="middle" value="2" />
            <flag name="end" value="4" />
        </attr>
    </declare-styleable>

    <declare-styleable name="FlexboxLayout_Layout">
        <attr name="layout_order" format="integer" />

        <!-- Negative numbers are invalid. -->
        <attr name="layout_flexGrow" format="float" />

        <!-- Negative numbers are invalid. -->
        <attr name="layout_flexShrink" format="float" />

        <!--
            The initial length in a percentage format relative to its parent. This is similar to the
            flex-basis property in the original CSS specification.
            But unlike the flex-basis property, this attribute only accepts a value in fraction
            (percentage), whereas flex-basis property accepts width values such as 1em, 10px and
            the 'content' string.
            But specifying initial fixed width values can be done by specifying width values in
            layout_width (or layout_height, varies depending on the flexDirection). Also the same
            effect can be done by specifying "wrap_contnet" in layout_width (or layout_height) if
            developers want to achieve the same effect as 'content'.
            Thus, this attribute only accepts fraction values, which can't be done through
            layout_width (or layout_height) for simplicity.
        -->
        <attr name="layout_flexBasisPercent" format="fraction" />

        <!--
            Omitting flex property since it's a shorthand for layout_flexGrow and layout_flexShrink
            and layout_percentInParent (flex-basis in the original CSS spec).
        -->

        <attr name="layout_alignSelf">
            <enum name="auto" value="-1" />
            <!-- The values below need to match the values of alignItems -->
            <enum name="flex_start" value="0" />
            <enum name="flex_end" value="1" />
            <enum name="center" value="2" />
            <enum name="baseline" value="3" />
            <enum name="stretch" value="4" />
        </attr>

        <attr name="layout_minWidth" format="dimension" />
        <attr name="layout_minHeight" format="dimension" />
        <attr name="layout_maxWidth" format="dimension" />
        <attr name="layout_maxHeight" format="dimension" />

        <!--
            This attribute forces a flex line wrapping. i.e. if this is set to true for a
            flex item, the item will become the first item of a flex line. (A wrapping happens
            regardless of the flex items being processed in the the previous flex line)
            This attribute is ignored if the flex_wrap attribute is set to nowrap.
            The equivalent attribute isn't defined in the original CSS Flexible Box Module
            specification, but having this attribute is useful for Android developers to flatten
            the layouts when building a grid like layout or for a situation where developers want
            to put a new flex line to make a semantic difference from the previous one, etc.
        -->
        <attr name="layout_wrapBefore" format="boolean" />
    </declare-styleable>
    <!--=============== end FlexboxLayout ====================-->

    <attr name="arc_origin">
        <!-- Value same as the android:gravity -->
        <flag name="top" value="0x30" />
        <flag name="bottom" value="0x50" />
        <flag name="left" value="0x03" />
        <flag name="right" value="0x05" />
        <flag name="center_vertical" value="0x10" />
        <flag name="center_horizontal" value="0x01" />
        <flag name="center" value="0x11" />
        <flag name="start" value="0x00800003" />
        <flag name="end" value="0x00800005" />
    </attr>

    <declare-styleable name="arc_ArcLayout">
        <attr name="arc_origin" />
        <attr name="arc_color" format="color" />
        <attr name="arc_radius" format="dimension" />
        <attr name="arc_axisRadius" format="dimension" />
        <attr name="arc_freeAngle" format="boolean" />
        <attr name="arc_reverseAngle" format="boolean" />
    </declare-styleable>

    <declare-styleable name="arc_ArcLayout_Layout">
        <attr name="arc_origin" />
        <attr name="arc_angle" format="float" />
    </declare-styleable>


    <declare-styleable name="BorderViewsAttrs">

        <!-- Default Android attrs -->
        <attr name="android:enabled" />
        <attr name="android:text" />
        <attr name="android:textSize" />
        <attr name="android:textAllCaps" />

        <attr name="fb_defaultColor" format="color" />
        <attr name="fb_text" format="string" />

        <attr name="fb_textColor" format="color" />
        <attr name="fb_iconColor" format="color" />

        <attr name="fb_textFont" format="string" />
        <attr name="fb_iconFont" format="string" />

        <attr name="fb_textSize" format="dimension" />
        <attr name="fb_iconResource" format="integer" />
        <attr name="fb_fontIconResource" format="string" />
        <attr name="fb_fontIconSize" format="dimension" />
        <attr name="fb_iconPosition" format="enum">
            <enum name="left" value="1" />
            <enum name="right" value="2" />
            <enum name="top" value="3" />
            <enum name="bottom" value="4" />
        </attr>

        <attr name="fb_textPosition" format="enum">
            <enum name="left" value="1" />
            <enum name="right" value="2" />
            <enum name="top" value="3" />
            <enum name="bottom" value="4" />
        </attr>

        <attr name="fb_textGravity" format="enum">
            <enum name="top" value="0x30" />
            <enum name="bottom" value="0x50" />
            <enum name="left" value="0x03" />
            <enum name="right" value="0x05" />
            <enum name="center_vertical" value="0x10" />
            <enum name="fill_vertical" value="0x70" />
            <enum name="center_horizontal" value="0x01" />
            <enum name="fill_horizontal" value="0x07" />
            <enum name="center" value="0x11" />
            <enum name="fill" value="0x77" />
            <enum name="clip_vertical" value="0x80" />
            <enum name="clip_horizontal" value="0x08" />
            <enum name="start" value="0x00800003" />
            <enum name="end" value="0x00800005" />
        </attr>

        <attr name="fb_iconPaddingLeft" format="dimension" />
        <attr name="fb_iconPaddingRight" format="dimension" />
        <attr name="fb_iconPaddingTop" format="dimension" />
        <attr name="fb_iconPaddingBottom" format="dimension" />

        <attr name="fb_radiusTopLeft" format="dimension"/>
        <attr name="fb_radiusTopRight" format="dimension"/>
        <attr name="fb_radiusBottomLeft" format="dimension"/>
        <attr name="fb_radiusBottomRight" format="dimension"/>

        <attr name="fb_borderColor" format="color" />
        <attr name="fb_borderWidth" format="dimension" />
        <attr name="fb_focusColor" format="color" />
        <attr name="fb_disabledColor" format="color" />
        <attr name="fb_disabledTextColor" format="color" />
        <attr name="fb_disabledBorderColor" format="color" />
        <attr name="fb_radius" format="dimension" />
        <attr name="fb_textAllCaps" format="boolean" />

        <attr name="fb_ghost" format="boolean" />
        <attr name="fb_useSystemFont" format="boolean" />
    </declare-styleable>

    <declare-styleable name="LoadingDots">
        <attr name="LoadingDots_auto_play" format="boolean"/>

        <attr name="LoadingDots_dots_color" format="color"/>
        <attr name="LoadingDots_dots_count" format="integer"/>
        <attr name="LoadingDots_dots_size" format="dimension"/>
        <attr name="LoadingDots_dots_space" format="dimension"/>

        <attr name="LoadingDots_loop_duration" format="integer"/>
        <attr name="LoadingDots_loop_start_delay" format="integer"/>

        <attr name="LoadingDots_jump_duration" format="integer"/>
        <attr name="LoadingDots_jump_height" format="dimension"/>
    </declare-styleable>

    <declare-styleable name="numberpicker">
        <attr name="startRange" format="integer" />
        <attr name="endRange" format="integer" />
        <attr name="defaultValue" format="integer" />
        <attr name="maxValue" format="integer" />
        <attr name="wrap" format="boolean" />
    </declare-styleable>

    <!-- NumberPicker style. -->
    <attr name="numberPickerStyle" format="reference" />
    <!-- NumberPicker up button style. -->
    <attr name="numberPickerUpButtonStyle" format="reference" />
    <!-- NumberPicker down button style. -->
    <attr name="numberPickerDownButtonStyle" format="reference" />
    <!-- NumberPicker input text style. -->
    <attr name="numberPickerInputTextStyle" format="reference" />

</resources>